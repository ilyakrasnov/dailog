#!/bin/bash
######################################################################################
# Created by Ilya Krasnov on 2016/06/19
# Captures today's tasks. Prints monthly summary
######################################################################################

DIR="/Users/`whoami`/Dropbox/dailog"
TODAY=`date +'%F (%A)'`
MONTH=`date +%Y-%m`
MONTH_HEADER=`date +%'B %Y'`
LAST_MONTH=`date -v -20d +%Y-%m`
FILE=${DIR}/${MONTH}.md
FILE_LAST_MONTH=${DIR}/${LAST_MONTH}.md
PDF=${DIR}/${MONTH}.pdf
PDF_LAST_MONTH=${DIR}/${LAST_MONTH}.pdf
MONTH_TITLE=`date +'%Y-%m'`
LAST_MONTH_TITLE=`date -v -20d +'%Y-%m'`

function line_to_file {
  echo "- $@" >> ${FILE}
}

function write_log {
  # Creates monthly file if needed
  if [ ! -e ${FILE} ]
  then
    touch ${FILE}
    echo "# ${MONTH_TITLE}" >> ${FILE}
  fi

  # Adds entries new days or appends to existing entry
  if grep -q "${TODAY}" ${FILE}
  then
    while read line
    do
      `gsed -i '/${TODAY}/a $line' ${FILE}`
      line_to_file $line
    done
  else
    printf "\n## ${TODAY} \n" >> ${FILE}
    while read line
    do
      line_to_file $line
    done
  fi
}

function create_and_open_pdf {
  printf "Generating pdf summary for $1\n"
  pandoc $2 -s --variable geometry:margin=1in -o $3
  open $3
}

function generate_pdf {
  printf "1 - Generate pdf for last month (default)\n"
  printf "2 - Generate pdf for current month\n"
  read -p 'Please chose an option: ' MONTH

  case $MONTH in
    1|'')
      create_and_open_pdf $LAST_MONTH_TITLE $FILE_LAST_MONTH $PDF_LAST_MONTH
      ;;
    2)
      create_and_open_pdf $MONTH_TITLE $FILE $PDF
      ;;
  esac
}

function preview_current_month {
  cat ${FILE}
}

function edit_current_month {
  printf "1 - Edit log for last month (default)\n"
  printf "2 - Edit log for current month\n"
  read -p 'Please chose an option: ' MONTH

  case $MONTH in
    1|'')
      vim ${FILE_LAST_MONTH}
      ;;
    2)
      vim ${FILE}
      ;;
  esac
}

function append_hg_log {
  hg log -r : -d `date +%F` | grep summary | awk '{first = $1; $1 = ""; print $0; }' | dailog
}

function append_git_log {
  git log --pretty=format:"%s" --after=`date +%F` --until=`date +%F` --author=`git config user.name` | dailog
}

# Create directory in root folder
[ -d ${DIR} ] || mkdir ${DIR}

# Main function
case $1 in
  '')
    write_log
    ;;
  preview)
    preview_current_month
    ;;
  edit)
    edit_current_month
    ;;
  pdf)
    generate_pdf
    ;;
  git)
    append_git_log
    ;;
  hg)
    append_hg_log
    ;;
esac
